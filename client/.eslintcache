[{"E:\\Work\\Code\\apps\\stellar\\client\\src\\index.tsx":"1","E:\\Work\\Code\\apps\\stellar\\client\\src\\App.tsx":"2","E:\\Work\\Code\\apps\\stellar\\client\\src\\reducers\\index.ts":"3","E:\\Work\\Code\\apps\\stellar\\client\\src\\ProtectedRoute.tsx":"4","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Auth\\Auth.tsx":"5","E:\\Work\\Code\\apps\\stellar\\client\\src\\reducers\\posts.ts":"6","E:\\Work\\Code\\apps\\stellar\\client\\src\\reducers\\auth.ts":"7","E:\\Work\\Code\\apps\\stellar\\client\\src\\themes\\index.ts":"8","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Auth\\googleIcon.js":"9","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Home\\index.tsx":"10","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Navbar\\index.tsx":"11","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Auth\\styles.ts":"12","E:\\Work\\Code\\apps\\stellar\\client\\src\\actions\\auth.ts":"13","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Auth\\Input.tsx":"14","E:\\Work\\Code\\apps\\stellar\\client\\src\\constants\\actionTypes.ts":"15","E:\\Work\\Code\\apps\\stellar\\client\\src\\themes\\dark-purple.ts":"16","E:\\Work\\Code\\apps\\stellar\\client\\src\\themes\\deep-blue.ts":"17","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Navbar\\styles.ts":"18","E:\\Work\\Code\\apps\\stellar\\client\\src\\logic.ts":"19","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Home\\styles.ts":"20","E:\\Work\\Code\\apps\\stellar\\client\\src\\actions\\posts.ts":"21","E:\\Work\\Code\\apps\\stellar\\client\\src\\api\\index.ts":"22","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Posts\\index.tsx":"23","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Form\\index.tsx":"24","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Form\\styles.ts":"25","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Posts\\styles.ts":"26","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Posts\\Post\\Post.tsx":"27","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Posts\\Post\\styles.ts":"28","E:\\Work\\Code\\apps\\stellar\\client\\src\\store.ts":"29"},{"size":494,"mtime":1664171329200,"results":"30","hashOfConfig":"31"},{"size":1674,"mtime":1664171607836,"results":"32","hashOfConfig":"31"},{"size":144,"mtime":1613168275460,"results":"33","hashOfConfig":"31"},{"size":532,"mtime":1664134207879,"results":"34","hashOfConfig":"31"},{"size":7096,"mtime":1664133340807,"results":"35","hashOfConfig":"31"},{"size":844,"mtime":1613168162180,"results":"36","hashOfConfig":"31"},{"size":643,"mtime":1664171484612,"results":"37","hashOfConfig":"31"},{"size":138,"mtime":1613308912810,"results":"38","hashOfConfig":"31"},{"size":535,"mtime":1613166086030,"results":"39","hashOfConfig":"31"},{"size":1336,"mtime":1613309183710,"results":"40","hashOfConfig":"31"},{"size":2775,"mtime":1614428721910,"results":"41","hashOfConfig":"31"},{"size":696,"mtime":1613311925360,"results":"42","hashOfConfig":"31"},{"size":766,"mtime":1664170966524,"results":"43","hashOfConfig":"31"},{"size":1860,"mtime":1613167440930,"results":"44","hashOfConfig":"31"},{"size":184,"mtime":1613168100150,"results":"45","hashOfConfig":"31"},{"size":327,"mtime":1613308853470,"results":"46","hashOfConfig":"31"},{"size":263,"mtime":1613308854660,"results":"47","hashOfConfig":"31"},{"size":337,"mtime":1612991317220,"results":"48","hashOfConfig":"31"},{"size":136,"mtime":1614427089547,"results":"49","hashOfConfig":"31"},{"size":411,"mtime":1612777334150,"results":"50","hashOfConfig":"31"},{"size":1605,"mtime":1612651141180,"results":"51","hashOfConfig":"31"},{"size":970,"mtime":1613294495820,"results":"52","hashOfConfig":"31"},{"size":991,"mtime":1612651192560,"results":"53","hashOfConfig":"31"},{"size":4955,"mtime":1613380797126,"results":"54","hashOfConfig":"31"},{"size":483,"mtime":1612385762266,"results":"55","hashOfConfig":"31"},{"size":290,"mtime":1612385738486,"results":"56","hashOfConfig":"31"},{"size":4334,"mtime":1613297814740,"results":"57","hashOfConfig":"31"},{"size":942,"mtime":1612727409088,"results":"58","hashOfConfig":"31"},{"size":337,"mtime":1664171314897,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"n19o82",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Work\\Code\\apps\\stellar\\client\\src\\index.tsx",["124","125","126","127","128"],"E:\\Work\\Code\\apps\\stellar\\client\\src\\App.tsx",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\reducers\\index.ts",[],[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\ProtectedRoute.tsx",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Auth\\Auth.tsx",["129"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n    Avatar,\n    Button,\n    Paper,\n    Grid,\n    Typography,\n    Container,\n    IconButton,\n} from '@material-ui/core'\nimport {\n    GoogleLogin,\n    GoogleLoginResponse,\n    GoogleLoginResponseOffline,\n} from 'react-google-login'\nimport GoogleIcon from './googleIcon'\nimport { LockOutlined } from '@material-ui/icons'\nimport Input from './Input'\nimport { signIn, signUp } from '../../actions/auth'\n\nimport useStyles from './styles'\n\nconst initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n}\n\nconst Auth = () => {\n    const classes = useStyles()\n    const [showPassword, setShowPassword] = useState(false)\n    const [isSignUp, setIsSignUp] = useState(false)\n    const [formData, setFormData] = useState(initialState)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        if (isSignUp) {\n            dispatch(signUp(formData, history))\n        } else {\n            dispatch(signIn(formData, history))\n        }\n    }\n\n    const handleChange = (\n        event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n        setFormData({ ...formData, [event.target.name]: event.target.value })\n    }\n\n    const isLoginResponseOffline = (\n        res: any,\n    ): res is GoogleLoginResponseOffline => res.hasOwnProperty('code')\n\n    const googleSuccess = async (\n        res: GoogleLoginResponse | GoogleLoginResponseOffline,\n    ) => {\n        if (isLoginResponseOffline(res)) {\n            return ''\n        }\n\n        const result = res?.profileObj\n        const token = res?.tokenId\n\n        try {\n            dispatch({ type: 'AUTH', data: { result, token } })\n\n            history.push('/')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const googleFailure = (failResponse: { error: string }) => {\n        console.log('Unable to sign in with Google. Please try again.')\n        console.log(failResponse.error)\n    }\n    const switchMode = () => {\n        setIsSignUp(prevSignUp => !prevSignUp)\n        setShowPassword(false)\n    }\n\n    const handleShowPassword = () =>\n        setShowPassword(prevShowPassword => !prevShowPassword)\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined />\n                </Avatar>\n                <Typography variant=\"h5\">\n                    {isSignUp ? 'Sign Up' : 'Sign In'}\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2} justify=\"center\">\n                        {isSignUp && (\n                            <>\n                                <Input\n                                    name=\"firstName\"\n                                    label=\"First Name\"\n                                    handleChange={handleChange}\n                                    autoFocus\n                                    half\n                                />\n                                <Input\n                                    name=\"lastName\"\n                                    label=\"Last Name\"\n                                    handleChange={handleChange}\n                                    half\n                                />\n                            </>\n                        )}\n                        <Grid item sm={12}>\n                            <Input\n                                name=\"email\"\n                                label=\"E-mail\"\n                                handleChange={handleChange}\n                                type=\"email\"\n                            />\n                        </Grid>\n                        <Grid item sm={12}>\n                            <Input\n                                name=\"password\"\n                                label=\"Password\"\n                                handleChange={handleChange}\n                                type={showPassword ? 'text' : 'password'}\n                                handleShowPassword={handleShowPassword}\n                            />\n                        </Grid>\n                        <Grid item sm={12}>\n                            {isSignUp && (\n                                <Input\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    handleChange={handleChange}\n                                    type=\"password\"\n                                />\n                            )}\n                        </Grid>\n                        <Grid item sm={12}>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disableElevation\n                                className={classes.submit}\n                            >\n                                {isSignUp ? 'Sign Up' : 'Sign In'}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <GoogleLogin\n                                clientId=\"10561569054-9msvhp8ijkgnlfqc5be18cvkjsv79io9.apps.googleusercontent.com\"\n                                render={renderProps => (\n                                    <IconButton\n                                        aria-label=\"google-sign-in\"\n                                        className={classes.googleButton}\n                                        color=\"primary\"\n                                        onClick={renderProps.onClick}\n                                        disabled={renderProps.disabled}\n                                    >\n                                        <GoogleIcon />\n                                    </IconButton>\n                                )}\n                                onSuccess={googleSuccess}\n                                onFailure={googleFailure}\n                                cookiePolicy=\"single_host_origin\"\n                            />\n                        </Grid>\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Button onClick={switchMode}>\n                                    {isSignUp\n                                        ? 'Already have an account? Sign In'\n                                        : \"Don't have an account? Sign Up\"}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth\n","E:\\Work\\Code\\apps\\stellar\\client\\src\\reducers\\posts.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\reducers\\auth.ts",["130","131"],"E:\\Work\\Code\\apps\\stellar\\client\\src\\themes\\index.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Auth\\googleIcon.js",[],[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Home\\index.tsx",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Navbar\\index.tsx",["132"],"import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { AppBar, Toolbar, Typography, Button, Avatar } from '@material-ui/core'\nimport { getUserLocalStorage } from '../../logic'\nimport useStyles from './styles'\nimport { LOGOUT } from '../../constants/actionTypes'\nimport decode from 'jwt-decode'\n\ninterface UserType {\n    name: string\n    imageUrl: string\n}\n\ninterface jwtToken {\n    name: string\n    exp: number\n}\n\nconst SignOutComponent: React.FC<{\n    loggedInUser: UserType\n    logoutHandler: any\n}> = ({ loggedInUser, logoutHandler }) => {\n    return (\n        <>\n            <Avatar alt={loggedInUser.name} src={loggedInUser.imageUrl}>\n                {loggedInUser.name.charAt(0)}\n            </Avatar>\n            <Typography variant=\"h6\">{loggedInUser.name}</Typography>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={logoutHandler}\n            >\n                Sign Out\n            </Button>\n        </>\n    )\n}\n\nconst Navbar: React.FC = () => {\n    const classes = useStyles()\n    const [user, setUser] = useState(getUserLocalStorage)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const location = useLocation()\n\n    console.log(user)\n\n    const logout = () => {\n        dispatch({ type: LOGOUT })\n        history.push('/')\n        setUser(null)\n    }\n\n    useEffect(() => {\n        const token = user?.token\n\n        if (token) {\n            const decodedToken = decode<jwtToken>(token)\n\n            if (decodedToken.exp * 1000 < new Date().getTime()) {\n                logout()\n            }\n        }\n\n        setUser(getUserLocalStorage)\n    }, [location])\n\n    return (\n        <AppBar className={classes.appBar} position=\"static\">\n            <Toolbar>\n                <Typography\n                    component={Link}\n                    to=\"/\"\n                    className={classes.heading}\n                    variant=\"h4\"\n                >\n                    stellar\n                </Typography>\n                {user ? (\n                    <SignOutComponent\n                        loggedInUser={user.result}\n                        logoutHandler={logout}\n                    />\n                ) : (\n                    <>\n                        <Button\n                            component={Link}\n                            to=\"/auth\"\n                            variant=\"contained\"\n                            color=\"secondary\"\n                        >\n                            Sign In\n                        </Button>\n                    </>\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar\n","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Auth\\styles.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\actions\\auth.ts",["133","134","135","136","137"],"import { Dispatch } from 'redux'\nimport * as api from '../api'\nimport { AUTH } from '../constants/actionTypes'\nimport { useHistory } from 'react-router-dom'\n\nexport const signIn = (formData: any, history: any) => async (\n    dispatch: Dispatch,\n) => {\n    try {\n        const { data } = await api.signIn(formData)\n\n        dispatch({ type: AUTH, data })\n\n        console.log(data, 'IS HISTORY PUSHED')\n        history.push('/')\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const signUp = (formData: any, history: any) => async (\n    dispatch: Dispatch,\n) => {\n    try {\n        const { data } = await api.signUp(formData)\n\n        dispatch({ type: AUTH, data })\n\n        history.push('/')\n    } catch (error) {\n        console.log(error)\n    }\n}\n","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Auth\\Input.tsx",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\constants\\actionTypes.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\themes\\dark-purple.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\themes\\deep-blue.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Navbar\\styles.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\logic.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Home\\styles.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\actions\\posts.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\api\\index.ts",["138","139"],"import axios from 'axios'\nimport { IPost } from '../types/post'\n\nconst API = axios.create({ baseURL: 'http://localhost:5000/' })\n\nAPI.interceptors.request.use(req => {\n    const userProfile = localStorage.getItem('profile')\n    if (userProfile) {\n        req.headers.authorization = `Bearer ${JSON.parse(userProfile).token}`\n    }\n\n    return req\n})\n\n// const url = 'https://celeste-project.herokuapp.com/posts'\n\nexport const getPosts = () => API.get('/posts')\n\nexport const createPost = (newPost: IPost) => API.post('/posts', newPost)\n\nexport const updatePost = (id: string, updatedPost: IPost) =>\n    API.patch(`/posts/${id}`, updatedPost)\n\nexport const deletePost = (id: string | undefined) => API.delete(`/posts/${id}`)\n\nexport const starPost = (id: string | undefined) =>\n    API.patch(`/posts/${id}/starPost`)\n\nexport const signIn = (formData: any) => API.post('/user/signIn', formData)\n\nexport const signUp = (formData: any) => API.post('/user/signUp', formData)\n","E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Posts\\index.tsx",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Form\\index.tsx",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Form\\styles.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Posts\\styles.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Posts\\Post\\Post.tsx",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\components\\Posts\\Post\\styles.ts",[],"E:\\Work\\Code\\apps\\stellar\\client\\src\\store.ts",[],{"ruleId":"140","severity":1,"message":"141","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":21},{"ruleId":"140","severity":1,"message":"144","line":6,"column":23,"nodeType":"142","messageId":"143","endLine":6,"endColumn":38},{"ruleId":"140","severity":1,"message":"145","line":6,"column":40,"nodeType":"142","messageId":"143","endLine":6,"endColumn":47},{"ruleId":"140","severity":1,"message":"146","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":13},{"ruleId":"140","severity":1,"message":"147","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":57,"column":14,"nodeType":"150","messageId":"151","endLine":57,"endColumn":17,"suggestions":"152"},{"ruleId":"148","severity":1,"message":"149","line":5,"column":34,"nodeType":"150","messageId":"151","endLine":5,"endColumn":37,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"149","line":6,"column":36,"nodeType":"150","messageId":"151","endLine":6,"endColumn":39,"suggestions":"154"},{"ruleId":"148","severity":1,"message":"149","line":22,"column":20,"nodeType":"150","messageId":"151","endLine":22,"endColumn":23,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"156","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":6,"column":34,"nodeType":"150","messageId":"151","endLine":6,"endColumn":37,"suggestions":"157"},{"ruleId":"148","severity":1,"message":"149","line":6,"column":48,"nodeType":"150","messageId":"151","endLine":6,"endColumn":51,"suggestions":"158"},{"ruleId":"148","severity":1,"message":"149","line":21,"column":34,"nodeType":"150","messageId":"151","endLine":21,"endColumn":37,"suggestions":"159"},{"ruleId":"148","severity":1,"message":"149","line":21,"column":48,"nodeType":"150","messageId":"151","endLine":21,"endColumn":51,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"149","line":29,"column":34,"nodeType":"150","messageId":"151","endLine":29,"endColumn":37,"suggestions":"161"},{"ruleId":"148","severity":1,"message":"149","line":31,"column":34,"nodeType":"150","messageId":"151","endLine":31,"endColumn":37,"suggestions":"162"},"@typescript-eslint/no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'applyMiddleware' is defined but never used.","'compose' is defined but never used.","'thunk' is defined but never used.","'reducers' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["163","164"],["165","166"],["167","168"],["169","170"],"'useHistory' is defined but never used.",["171","172"],["173","174"],["175","176"],["177","178"],["179","180"],["181","182"],{"messageId":"183","fix":"184","desc":"185"},{"messageId":"186","fix":"187","desc":"188"},{"messageId":"183","fix":"189","desc":"185"},{"messageId":"186","fix":"190","desc":"188"},{"messageId":"183","fix":"191","desc":"185"},{"messageId":"186","fix":"192","desc":"188"},{"messageId":"183","fix":"193","desc":"185"},{"messageId":"186","fix":"194","desc":"188"},{"messageId":"183","fix":"195","desc":"185"},{"messageId":"186","fix":"196","desc":"188"},{"messageId":"183","fix":"197","desc":"185"},{"messageId":"186","fix":"198","desc":"188"},{"messageId":"183","fix":"199","desc":"185"},{"messageId":"186","fix":"200","desc":"188"},{"messageId":"183","fix":"201","desc":"185"},{"messageId":"186","fix":"202","desc":"188"},{"messageId":"183","fix":"203","desc":"185"},{"messageId":"186","fix":"204","desc":"188"},{"messageId":"183","fix":"205","desc":"185"},{"messageId":"186","fix":"206","desc":"188"},"suggestUnknown",{"range":"207","text":"208"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"207","text":"209"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"210","text":"208"},{"range":"210","text":"209"},{"range":"211","text":"208"},{"range":"211","text":"209"},{"range":"212","text":"208"},{"range":"212","text":"209"},{"range":"213","text":"208"},{"range":"213","text":"209"},{"range":"214","text":"208"},{"range":"214","text":"209"},{"range":"215","text":"208"},{"range":"215","text":"209"},{"range":"216","text":"208"},{"range":"216","text":"209"},{"range":"217","text":"208"},{"range":"217","text":"209"},{"range":"218","text":"208"},{"range":"218","text":"209"},[1488,1491],"unknown","never",[159,162],[200,203],[607,610],[191,194],[205,208],[519,522],[533,536],[850,853],[927,930]]